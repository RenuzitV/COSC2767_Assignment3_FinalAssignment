#   RMIT University Vietnam
#   Course: COSC2767 Systems Deployment and Operations
#   Semester: 2023C
#   Assessment: Assignment 3
#   Author: Kha Nguyen Anh Tran
#   ID: 3750945
#   Last modified: 25/12/2023 (e.g. 05/08/2023)
---
- hosts: swarm_manager
  become: yes
  vars:
    kubectl_url: "https://s3.us-west-2.amazonaws.com/amazon-eks/1.28.3/2023-11-14/bin/linux/amd64/kubectl"
    aws_eks_cluster_name: "devops-eks-cluster"
    aws_region: "us-east-1"
    jenkins_repo_uri: "3750945/jenkins"

  tasks:
    - name: Install AWS CLI
      command: curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      args:
        creates: /usr/local/bin/aws

    - name: Install Docker
      yum:
        name: docker
        state: present

    - name: Install kubectl
      get_url:
        url: "{{ kubectl_url }}"
        dest: "/tmp/kubectl"
        mode: '0755'

    - name: Make kubectl executable
      command: chmod +x /tmp/kubectl

    - name: Move kubectl to /usr/local/bin
      command: mv /tmp/kubectl /usr/local/bin/kubectl

    - name: Update AWS EKS kubeconfig
      command: "aws eks update-kubeconfig --name {{ aws_eks_cluster_name }} --region {{ aws_region }}"

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Initialize Docker Swarm
      command: docker swarm init
      ignore_errors: yes

    - name: Build Jenkins Docker image
      shell: |
        echo "040421Ed!" | docker login --username 3750945 --password-stdin
        docker build --build-arg DOCKER_GROUP_ID=$(getent group docker | cut -d: -f3) -t jenkins /root/COSC2767_Assignment3_FinalAssignment/BASIC-REQUIREMENTS/Jenkins
        docker tag jenkins:latest {{ jenkins_repo_uri }}:latest
        docker push {{ jenkins_repo_uri }}:latest
        yes | docker image prune -a
        yes | docker volume prune -a
      args:
        chdir: /root/COSC2767_Assignment3_FinalAssignment/BASIC-REQUIREMENTS/Jenkins

    - name: Remove existing Jenkins service (if exists)
      shell: docker service rm jenkins || true

    - name: Deploy Jenkins as a Docker Swarm service
      shell: |
        docker service create \
          --name jenkins \
          --publish published=8080,target=8080 \
          --mount type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock \
          --restart-condition=on-failure \
          {{ jenkins_repo_uri }}:latest